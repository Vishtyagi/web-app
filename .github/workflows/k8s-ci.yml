name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r src/requirements.txt
          pip install flake8 pytest pytest-cov bandit safety

      - name: Lint Code
        run: flake8 .

      - name: Run Security Scan
        run: bandit -r .

      - name: Check Vulnerable Dependencies
        run: safety check

  docker-build:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Tag Image
        run: |
          docker build -t myapp:${{ github.sha }} -f src/Dockerfile src/
          docker tag myapp:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

      - name: Push Image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest

  k8s-validation:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Install kubeval
        run: |
          curl -sSL -o /usr/local/bin/kubeval https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64
          chmod +x /usr/local/bin/kubeval
          kubeval --version  # Verify installation

      - name: Validate Kubernetes YAMLs
        run: kubeval kubernetes/**/*.yaml

      - name: Dry Run Deployment
        run: kubectl apply --dry-run=client -f kubernetes/deployment.yaml

  deploy:
    needs: k8s-validation
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: kubectl apply -f kubernetes/

      - name: Run Smoke Tests
        run: |
          sleep 10
          curl -f http://myapp-service.default.svc.cluster.local/health || exit 1
